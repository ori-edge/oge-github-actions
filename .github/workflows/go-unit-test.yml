name: Go unit test

on:
  workflow_call:
    inputs:
      goVersion:
        description: "version of go to use"
        default: "stable"
        required: false
        type: string
      unitTestCommand:
        description: "unit test command to run using bash"
        default: "make race"
        required: false
        type: string
      uploadToCodecov:
        description: "flag to indicate if the results should be uploaded to codecov"
        default: true
        required: false
        type: boolean
      coverageFilePath:
        description: "path to coverage report generated by go test"
        default: "./artifacts/coverage.txt"
        required: false
        type: string
      runsOn:
        description: "github actions runner to use for this action"
        default: "ubuntu-latest"
        required: false
        type: string
      loginDocker:
        description: "the flag indicating if the unit tests need to access a private docker registry"
        default: false
        required: false
        type: boolean
      dockerRegistry:
        description: "name of the docker registry"
        required: false
        default: "quay.io"
        type: string
    secrets:
      CODECOV_TOKEN:
        description: "codecov report upload token"
        required: false
      REGISTRY_USERNAME:
        description: "docker registry username"
        required: false
      REGISTRY_PASSWORD:
        description: "docker registry password"
        required: false

jobs:
  unit-test:
    runs-on: ${{ inputs.runsOn }}
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.goVersion }}
          cache-dependency-path: go.sum

      - name: Login to docker registry
        if: ${{ inputs.loginDocker }}
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.dockerRegistry }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Unit Test
        run: bash -c "${{ inputs.unitTestCommand }}"
      - name: Upload Coverage Report
        if: ${{ inputs.uploadToCodecov }}
        uses: codecov/codecov-action@v5.4.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ${{ inputs.coverageFilePath }}
          flags: unittests
          name: codecov-umbrella
